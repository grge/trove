"""Type stubs for trove.search module."""

from typing import Iterator, AsyncIterator, Optional, List, Dict, Any
from .resources.search import SearchResult

class Search:
    """Fluent search builder interface."""
    
    def text(self, query: str) -> Search: ...
    
    def in_(self, *categories: str) -> Search: ...
    
    def decade(self, *decades: str) -> Search: ...
    
    def year(self, *years: str) -> Search: ...
    
    def state(self, *states: str) -> Search: ...
    
    def title(self, *titles: str) -> Search: ...
    
    def format(self, *formats: str) -> Search: ...
    
    def online(self) -> Search: ...
    
    def illustrated(self) -> Search: ...
    
    def page_size(self, size: int) -> Search: ...
    
    def sort_by(self, sort_option: str) -> Search: ...
    
    def with_reclevel(self, level: str) -> Search: ...
    
    def with_facets(self, *facets: str) -> Search: ...
    
    def where(self, **filters) -> Search: ...
    
    def harvest(self) -> Search: ...
    
    def first_page(self) -> SearchResult: ...
    
    async def afirst_page(self) -> SearchResult: ...
    
    def pages(self) -> Iterator[SearchResult]: ...
    
    async def apages(self) -> AsyncIterator[SearchResult]: ...
    
    def records(self) -> Iterator[Dict[str, Any]]: ...
    
    async def arecords(self) -> AsyncIterator[Dict[str, Any]]: ...
    
    def explain(self) -> Dict[str, Any]: ...